[{"content":"Hugo 블로그의 Stack 테마를 사용할 때, 기본적으로 코드 블록이 wrapping되지 않는 문제가 있었다.\n문제 상황 테마 설정에서 해당 옵션에서 찾으려고 했지만 해결하지 못했다. 결국 아래와 같이 CSS를 수정하는 방식으로 문제를 해결했다.\n해결 방법 Hugo Stack 테마에서 코드 블록의 wrapping을 활성화하기 위해서는 CSS를 수정해야 한다. custom.scss 파일에 다음과 같은 스타일을 추가하는 것이 필요하다.\n1 2 3 4 5 6 7 8 9 // Code Black Wrapping .article-content { pre { code { white-space: pre-wrap !important; word-wrap: break-word !important; } } } white-space: pre-wrap: 코드 블록 내의 텍스트가 컨테이너 너비를 초과할 때 자동으로 줄바꿈 word-wrap: break-word: 긴 단어나 문자열이 컨테이너 너비를 초과할 때 강제로 줄바꿈 !important 규칙을 사용하여 테마의 기본 스타일을 덮어씀 변경사항을 적용한 후 Hugo 서버를 재시작하면 코드 블록의 내용이 자동으로 줄바꿈되는 것을 확인할 수 있다.\n추가로, custom.scss 파일에 대해 설명하자면, SCSS 파일은 단순한 CSS 파일이 아니며 CSS를 더 효율적으로 작성할 수 있도록 도와주는 전처리(preprocessor) 언어다. SCSS는 일반 CSS 문법에 변수, 중첩, 믹스인, 함수 등의 기능을 추가해 보다 체계적이고 유지보수가 쉬운 스타일 시트를 작성할 수 있게 한다. 최종적으로 이 SCSS 파일은 표준 CSS로 컴파일되어 웹 브라우저가 인식할 수 있는 형태가 된다.\n","date":"2025-03-03T01:16:00Z","permalink":"https://refigo.github.io/blog/p/hugo-stack-%ED%85%8C%EB%A7%88%EC%97%90%EC%84%9C-%EC%BD%94%EB%93%9C-%EB%B8%94%EB%A1%9D-%EC%9E%90%EB%8F%99-%EC%A4%84%EB%B0%94%EA%BF%88-%ED%99%9C%EC%84%B1%ED%99%94/","title":"Hugo Stack 테마에서 코드 블록 자동 줄바꿈 활성화"},{"content":"Ubuntu 22.04에서 ScreenCast WebM 영상을 MP4로 변환하기 Ubuntu 22.04 환경에서 Screen Cast 기능을 이용해 녹화한 영상은 기본적으로 .webm 확장자로 저장된다. 하지만, 외부 공유나 편집을 위해 .mp4 확장자로 변환해야 할 때가 많다. 특히, Google Drive와 같은 플랫폼에서는 MP4가 더 널리 지원되므로 변환이 필요할 수 있다.\n이 글에서는 FFmpeg를 이용하여 WebM 영상을 MP4로 변환하는 방법을 소개한다.\nFFmpeg란? FFmpeg는 오디오 및 비디오를 처리하는 강력한 오픈소스 툴이다. 다양한 포맷 변환을 지원하며, 품질을 유지하면서 빠르게 영상을 변환할 수 있다.\nFFmpeg를 이용한 WebM → MP4 변환 방법 터미널에서 아래 명령어를 실행하면 .webm 파일을 .mp4로 변환할 수 있다.\n1 ffmpeg -i \u0026lt;original_video.webm\u0026gt; -r 60 -vf \u0026#34;format=yuv444p,scale=1585:885\u0026#34; -c:v libx264 -crf 23 -c:a aac -strict -2 -q:a 100 -movflags +faststart \u0026lt;converted_video.mp4\u0026gt; 옵션 설명 -i \u0026lt;original_video.webm\u0026gt;: 변환할 원본 WebM 파일을 지정한다. -r 60: 프레임 속도를 60fps로 설정하여 영상이 끊기지 않도록 한다. -vf \u0026quot;format=yuv444p,scale=1585:885\u0026quot;: 비디오 포맷을 YUV444p로 설정하고, 특정 해상도로 조정한다. (scale 값은 원본 영상에 맞춰 조정 필요) -c:v libx264: 비디오 코덱을 H.264로 설정한다. -crf 23: 비디오 품질을 설정한다. (값이 낮을수록 고품질, 18~28 범위 추천) -c:a aac: 오디오 코덱을 AAC로 설정한다. -strict -2: FFmpeg의 실험적 기능을 허용하여 AAC 코덱을 활성화한다. -q:a 100: 오디오 품질을 설정한다. (70~100 범위 추천) -movflags +faststart: MP4 파일의 메타데이터를 파일의 시작 부분으로 이동시켜 빠른 스트리밍이 가능하도록 한다. 변환 과정에서 발생할 수 있는 문제 해결 1. \u0026ldquo;width not divisible by 2\u0026rdquo; 오류 변환 중에 다음과 같은 오류가 발생할 수 있다.\n1 width not divisible by 2 이는 영상의 가로 또는 세로 해상도가 홀수일 때 발생한다. 해결 방법은 -vf \u0026quot;format=yuv444p,scale=1585:885\u0026quot; 옵션을 추가하여 짝수 해상도로 변환하는 것이다.\n출처: Stack Overflow\n2. 변환된 영상이 끊기는 문제 -r 60 옵션을 사용하지 않으면 영상이 뚝뚝 끊길 수 있다. 따라서 원활한 재생을 위해 이 옵션을 포함하는 것이 좋다.\n변환 예시 다음은 실제 변환 과정에서 사용한 명령어이다.\n1 ffmpeg -i Digital_Twin_BBS_View_UI_250108.webm -r 60 -vf \u0026#34;format=yuv444p,scale=1585:885\u0026#34; -c:v libx264 -crf 23 -c:a aac -strict -2 -q:a 100 -movflags +faststart test_output_250108.mp4 변환 후, MP4 파일을 Google Drive에 업로드하거나 편집 프로그램에서 활용할 수 있다.\n마무리 Ubuntu 22.04에서 Screen Cast로 녹화한 WebM 영상을 MP4로 변환하는 방법을 알아보았다. FFmpeg는 강력한 툴이며, 다양한 옵션을 활용하면 원하는 설정으로 영상을 변환할 수 있다. 위의 명령어를 참고하여 필요에 맞게 변환을 진행해보자!\n참고 자료 Stack Overflow - width not divisible by 2 오류 해결 FFmpeg 옵션 설명 ","date":"2025-02-14T09:46:00Z","permalink":"https://refigo.github.io/blog/p/ubuntu-22.04%EC%97%90%EC%84%9C-screencast-webm-%EC%98%81%EC%83%81%EC%9D%84-mp4%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0/","title":"Ubuntu 22.04에서 ScreenCast WebM 영상을 MP4로 변환하기"}]